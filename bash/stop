#!/bin/bash

if [ "$(git rev-parse --abbrev-ref HEAD)" == "master" ]; then
  git reset --hard HEAD 1>/dev/null 2>&1
  git pull -f 1>/dev/null 2>&1
fi

echo "Checking Requirements:"
DOCKER_VERSION=$(docker --version | sed -E 's/.*([0-9]{2}.[0-9]{2}.[0-9]+).*/\1/' | cut -d. -f1)
DOCKER_COMPOSE_VERSION=$(docker-compose --version | sed -E 's/.*([0-9]{1,2}.[0-9]{2}.[0-9]+),.*/\1/' | cut -d. -f2)
[ "${DOCKER_VERSION:-0}" -ge 19 ] && printf "%-20s .. ok\n" "docker" || (printf "%-20s .. %s\n" "docker" "FAILED (should be 19+)"; exit 1)
[ "${DOCKER_COMPOSE_VERSION:-0}" -ge 25 ] && printf "%-20s .. ok\n" "docker-compose" || (printf "%-20s .. %s\n" "docker-compose" "FAILED (should be 1.25+)"; exit 1)
echo

## Removing previous stack, if it is
docker ps -q --filter label=lab | xargs $(xargs --version 2>/dev/null | grep GNU >/dev/null && echo "-r") docker rm -f
docker volume ls --filter label=lab -q | xargs $(xargs --version 2>/dev/null | grep GNU >/dev/null && echo "-r") docker volume rm -f
docker network ls --filter label=lab -q | xargs $(xargs --version 2>/dev/null | grep GNU >/dev/null && echo "-r") docker network rm